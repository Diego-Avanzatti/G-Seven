# Informatorio Etapa 2 - Desarrollo Web - 2025 
Proyecto Final - Blog de Videojuegos - EQUIPO 7 

Aplicaci√≥n web desarrollada en Python utilizando Django y SQL con bases de datos relacionales orientada a publicar contenido en formato de entradas o art√≠culos (tambi√©n llamados ‚Äúposts‚Äù), organizados cronol√≥gicamente. 


# Funcionalidades:

‚ñ∂ Acceso de diversos perfiles (admin, registrado, etc).
‚ñ∂ Carga de un nuevo posteo, eliminaci√≥n de posteos publicados (con diversas restricciones).
‚ñ∂ Que los usuarios registrados puedan realizar comentarios acerca de los posteos. Para ello un usuario debe estar autenticado y tener perfil registrado.
‚ñ∂ Logueo de usuario "administrador" y registrado.
‚ñ∂ Filtrado de los posteos por fecha, categor√≠a y comentarios recibidos.


# Ejecuci√≥n del proyecto:

1. Clonar el repositorio 
2. Crear un entorno virtual (python -m venv entorno) en el bash
3. Activar el entorno virtual (.\entorno\Scripts\activate) "PowerShell"
4. Istalar las dependencias (pip install -r requirements.txt)


# Crear base de datos de forma local en MySQL:

En el BASH: mysql -u root -p
Cada integrante debe crear una base de datos local en MySQL con este comando:
#CREATE DATABASE blog_db CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;


# Ejecutar migraciones:

python manage.py makemigrations
python manage.py migrate


# Crear superusuario para usar el panel admin:

python manage.py createsuperuser

Te va a pedir: 
*usuario:
*email: 
*Password: *** (no se ve pero se guarda igual)
*Password (again): *** (no se ve pero se guarda igual)

Bypass password validation and create user anyway? [y/N]: y
Superuser created successfully.


# Ejecuta el servidor:

python manage.py runserver


# Abri el navegador en:

http://127.0.0.1:80000

Carpeta media/ (imagenes)

* Las imagenes cargadas desde el panel de administracion se guardan en la carpeta media/
* Esta carpeta si esta incluidad en el repositorio, por lo que se puede clonar y ver imagenes de ejemplo
* Las rutas estan configuradas en settings.py y urls.py

# Pasos para importar la base de datos y poder visualizar los posteos publicados:

1. Abrir MySQL Workbench
2. En el panel izquierdo de Navegaci√≥n seleccionar en la parte inferior "Administration".
3. Luego en el men√∫ bajo el t√≠tulo "MANAGEMENT" marcar la opci√≥n "Data Import/Restore".
4. Aparecer√° una ventana a la derecha con dos pesta√±as. En la primera pesta√±a que dice "Import form Disk" seleccionar la opci√≥n "Import from Self-Contained File".
5. El siguiente paso es seleccionar la ruta del archivo "db_export.sql" que est√° en la carpeta "Base de datos" (base de datos/db_export.sql). Para ello hacer click en el bot√≥n "..." para seleccionar la ruta del archivo a importar.
6. Continuamos con la selecci√≥n de nuestra base de datos "blog_db" en el men√∫ desplegable de la opci√≥n "Default Target Schema".
7. Una vez seleccionada la base de datos como destino, asegurarse de que est√© marcada la opci√≥n "Dump Structure and Data" (para importar tanto las tablas como el contenido).
8. Pasar a la secci√≥n "Import Progress" y comenzar la importaci√≥n haciendo click en el bot√≥n "Start Import".
9. Finalizado el proceso de importaci√≥n, en el panel izquierdo seleccionar "Schemas", hacer clic en el √≠cono derecho "üîºüîΩ" para refrescar/actualizar o al hacer click derecho en nuestra base de datos "blog_db" seleccionar del men√∫ la opci√≥n "Refresh All" para ver la base importada con sus tablas y datos.

*Importante: En caso de agregarse nuevos posteos se tendr√° que volver a importar la base para mantenerla actualizada. Cada vez que se abra el proyecto, revisar si el archivo .sql fue actualizado. 

Integrantes:

- Ant√∫nez, Pablo
- Avanzatti, Diego Gabriel
- Criscueli, Eduardo Ezequiel
- Fern√°ndez, Ezequiel Jes√∫s
- Salas, Gabriel Leonardo
- S√°nchez, Vanina
- Viton, Eliana
